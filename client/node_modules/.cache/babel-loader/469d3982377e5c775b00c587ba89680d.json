{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst AdminPanel = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [noviProizvod, setNoviProizvod] = useState({\n    naziv: \"\",\n    cijena: \"\",\n    opis: \"\"\n  });\n  const [kategorijaZaNovi, setKategorijaZaNovi] = useState(\"svi\");\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(\"/api/data\");\n      setData(res.data);\n    } catch (err) {\n      setError(\"Greška pri učitavanju podataka\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const dodajProizvod = async () => {\n    if (!noviProizvod.naziv || !noviProizvod.cijena) {\n      alert(\"Molimo unesite naziv i cijenu proizvoda.\");\n      return;\n    }\n    try {\n      await axios.put(`/api/dodaj/${kategorijaZaNovi}`, noviProizvod);\n      setNoviProizvod({\n        naziv: \"\",\n        cijena: \"\",\n        opis: \"\"\n      });\n      fetchData();\n      alert(\"Proizvod je uspješno dodat.\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Greška pri dodavanju proizvoda.\");\n    }\n  };\n  const obrisiProizvod = async (kategorija, naziv) => {\n    if (!window.confirm(`Da li ste sigurni da želite obrisati proizvod \"${naziv}\" iz kategorije \"${kategorija}\"?`)) return;\n    try {\n      await axios.delete(`/api/obrisi/${kategorija}/${naziv}`);\n      fetchData();\n      alert(\"Proizvod je obrisan.\");\n    } catch {\n      alert(\"Greška pri brisanju proizvoda.\");\n    }\n  };\n  if (loading) return React.createElement(\"p\", null, \"Učitavanje...\");\n  if (error) return React.createElement(\"p\", null, error);\n  return React.createElement(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: 700,\n      margin: \"auto\"\n    }\n  }, React.createElement(\"h2\", null, \"Admin panel - proizvodi\"),\n  // Forma za dodavanje proizvoda\n  React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    }\n  }, React.createElement(\"h3\", null, \"Dodaj novi proizvod\"), React.createElement(\"select\", {\n    value: kategorijaZaNovi,\n    onChange: e => setKategorijaZaNovi(e.target.value)\n  }, Object.keys(data).map(kat => React.createElement(\"option\", {\n    key: kat,\n    value: kat\n  }, kat))), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Naziv proizvoda\",\n    value: noviProizvod.naziv,\n    onChange: e => setNoviProizvod({\n      ...noviProizvod,\n      naziv: e.target.value\n    })\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Cijena (KM)\",\n    value: noviProizvod.cijena,\n    onChange: e => setNoviProizvod({\n      ...noviProizvod,\n      cijena: e.target.value\n    })\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Opis proizvoda\",\n    value: noviProizvod.opis,\n    onChange: e => setNoviProizvod({\n      ...noviProizvod,\n      opis: e.target.value\n    })\n  }), React.createElement(\"button\", {\n    onClick: dodajProizvod\n  }, \"Dodaj proizvod\")),\n  // Prikaz proizvoda po kategorijama\n  Object.entries(data).map(([kategorija, proizvodi]) => React.createElement(\"div\", {\n    key: kategorija,\n    style: {\n      marginBottom: 30\n    }\n  }, React.createElement(\"h3\", null, kategorija), proizvodi.length === 0 ? React.createElement(\"p\", null, \"Nema proizvoda u kategoriji.\") : null, React.createElement(\"ul\", null, proizvodi.map(p => React.createElement(\"li\", {\n    key: p.naziv,\n    style: {\n      marginBottom: 5\n    }\n  }, React.createElement(\"b\", null, p.naziv), ` - ${p.cijena} KM `, React.createElement(\"button\", {\n    onClick: () => obrisiProizvod(kategorija, p.naziv),\n    style: {\n      marginLeft: 10\n    }\n  }, \"Obriši\")))))));\n};\nexport default AdminPanel;","map":{"version":3,"names":["React","useEffect","useState","axios","AdminPanel","data","setData","loading","setLoading","error","setError","noviProizvod","setNoviProizvod","naziv","cijena","opis","kategorijaZaNovi","setKategorijaZaNovi","fetchData","res","get","err","dodajProizvod","alert","put","_err$response","_err$response$data","response","obrisiProizvod","kategorija","window","confirm","delete","createElement","style","padding","maxWidth","margin","marginBottom","value","onChange","e","target","Object","keys","map","kat","key","type","placeholder","onClick","entries","proizvodi","length","p","marginLeft"],"sources":["C:/Users/muki_/atelier-noir/client/src/pages/admin-panel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminPanel = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [noviProizvod, setNoviProizvod] = useState({\r\n    naziv: \"\",\r\n    cijena: \"\",\r\n    opis: \"\",\r\n  });\r\n  const [kategorijaZaNovi, setKategorijaZaNovi] = useState(\"svi\");\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get(\"/api/data\");\r\n      setData(res.data);\r\n    } catch (err) {\r\n      setError(\"Greška pri učitavanju podataka\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const dodajProizvod = async () => {\r\n    if (!noviProizvod.naziv || !noviProizvod.cijena) {\r\n      alert(\"Molimo unesite naziv i cijenu proizvoda.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.put(`/api/dodaj/${kategorijaZaNovi}`, noviProizvod);\r\n      setNoviProizvod({ naziv: \"\", cijena: \"\", opis: \"\" });\r\n      fetchData();\r\n      alert(\"Proizvod je uspješno dodat.\");\r\n    } catch (err) {\r\n      alert(err.response?.data?.error || \"Greška pri dodavanju proizvoda.\");\r\n    }\r\n  };\r\n\r\n  const obrisiProizvod = async (kategorija, naziv) => {\r\n    if (!window.confirm(`Da li ste sigurni da želite obrisati proizvod \"${naziv}\" iz kategorije \"${kategorija}\"?`))\r\n      return;\r\n\r\n    try {\r\n      await axios.delete(`/api/obrisi/${kategorija}/${naziv}`);\r\n      fetchData();\r\n      alert(\"Proizvod je obrisan.\");\r\n    } catch {\r\n      alert(\"Greška pri brisanju proizvoda.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return React.createElement(\"p\", null, \"Učitavanje...\");\r\n  if (error) return React.createElement(\"p\", null, error);\r\n\r\n  return React.createElement(\r\n    \"div\",\r\n    { style: { padding: \"20px\", maxWidth: 700, margin: \"auto\" } },\r\n    React.createElement(\"h2\", null, \"Admin panel - proizvodi\"),\r\n\r\n    // Forma za dodavanje proizvoda\r\n    React.createElement(\r\n      \"div\",\r\n      { style: { marginBottom: 20 } },\r\n      React.createElement(\"h3\", null, \"Dodaj novi proizvod\"),\r\n\r\n      React.createElement(\r\n        \"select\",\r\n        {\r\n          value: kategorijaZaNovi,\r\n          onChange: (e) => setKategorijaZaNovi(e.target.value),\r\n        },\r\n        Object.keys(data).map((kat) =>\r\n          React.createElement(\"option\", { key: kat, value: kat }, kat)\r\n        )\r\n      ),\r\n\r\n      React.createElement(\"input\", {\r\n        type: \"text\",\r\n        placeholder: \"Naziv proizvoda\",\r\n        value: noviProizvod.naziv,\r\n        onChange: (e) =>\r\n          setNoviProizvod({ ...noviProizvod, naziv: e.target.value }),\r\n      }),\r\n\r\n      React.createElement(\"input\", {\r\n        type: \"number\",\r\n        placeholder: \"Cijena (KM)\",\r\n        value: noviProizvod.cijena,\r\n        onChange: (e) =>\r\n          setNoviProizvod({ ...noviProizvod, cijena: e.target.value }),\r\n      }),\r\n\r\n      React.createElement(\"input\", {\r\n        type: \"text\",\r\n        placeholder: \"Opis proizvoda\",\r\n        value: noviProizvod.opis,\r\n        onChange: (e) =>\r\n          setNoviProizvod({ ...noviProizvod, opis: e.target.value }),\r\n      }),\r\n\r\n      React.createElement(\r\n        \"button\",\r\n        { onClick: dodajProizvod },\r\n        \"Dodaj proizvod\"\r\n      )\r\n    ),\r\n\r\n    // Prikaz proizvoda po kategorijama\r\n    Object.entries(data).map(([kategorija, proizvodi]) =>\r\n      React.createElement(\r\n        \"div\",\r\n        { key: kategorija, style: { marginBottom: 30 } },\r\n        React.createElement(\"h3\", null, kategorija),\r\n        proizvodi.length === 0\r\n          ? React.createElement(\"p\", null, \"Nema proizvoda u kategoriji.\")\r\n          : null,\r\n        React.createElement(\r\n          \"ul\",\r\n          null,\r\n          proizvodi.map((p) =>\r\n            React.createElement(\r\n              \"li\",\r\n              { key: p.naziv, style: { marginBottom: 5 } },\r\n              React.createElement(\"b\", null, p.naziv),\r\n              ` - ${p.cijena} KM `,\r\n              React.createElement(\r\n                \"button\",\r\n                {\r\n                  onClick: () => obrisiProizvod(kategorija, p.naziv),\r\n                  style: { marginLeft: 10 },\r\n                },\r\n                \"Obriši\"\r\n              )\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}